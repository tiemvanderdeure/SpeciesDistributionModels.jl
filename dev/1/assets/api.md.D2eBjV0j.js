import{_ as p,C as h,c as d,o,ai as t,j as i,G as a,a as n,w as l}from"./chunks/framework.Bl1LXqrS.js";const M=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),r={name:"api.md"},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""};function f(C,s,D,v,S,_){const e=h("Badge");return o(),d("div",null,[s[36]||(s[36]=t('<h2 id="Index" tabindex="-1">Index <a class="header-anchor" href="#Index" aria-label="Permalink to &quot;Index {#Index}&quot;">​</a></h2><ul><li><a href="#SpeciesDistributionModels.ShapleyValues"><code>SpeciesDistributionModels.ShapleyValues</code></a></li><li><a href="#SpeciesDistributionModels.evaluate-Tuple{Any}"><code>SpeciesDistributionModels.evaluate</code></a></li><li><a href="#SpeciesDistributionModels.explain-Tuple{SDMensemble}"><code>SpeciesDistributionModels.explain</code></a></li><li><a href="#SpeciesDistributionModels.machine_evaluations"><code>SpeciesDistributionModels.machine_evaluations</code></a></li><li><a href="#SpeciesDistributionModels.predict-Tuple{SpeciesDistributionModels.SDMmachine, Any}"><code>SpeciesDistributionModels.predict</code></a></li><li><a href="#SpeciesDistributionModels.remove_collinear-Tuple{Any}"><code>SpeciesDistributionModels.remove_collinear</code></a></li><li><a href="#SpeciesDistributionModels.sdm-Tuple{Any, Any}"><code>SpeciesDistributionModels.sdm</code></a></li><li><a href="#SpeciesDistributionModels.sdmdata-Tuple{Any, Any}"><code>SpeciesDistributionModels.sdmdata</code></a></li><li><a href="#SpeciesDistributionModels.thin-Tuple{Any, Any}"><code>SpeciesDistributionModels.thin</code></a></li></ul><h2 id="Reference-Exported-functions" tabindex="-1">Reference - Exported functions <a class="header-anchor" href="#Reference-Exported-functions" aria-label="Permalink to &quot;Reference - Exported functions {#Reference-Exported-functions}&quot;">​</a></h2>',3)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"SpeciesDistributionModels.ShapleyValues",href:"#SpeciesDistributionModels.ShapleyValues"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.ShapleyValues")],-1)),s[1]||(s[1]=n()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ShapleyValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(algorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Shapley.Algorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ShapleyValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; threaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GLOBAL_RNG)</span></span></code></pre></div><p>Use to specify use Shapley values as method in <a href="/SpeciesDistributionModels.jl/dev/api#SpeciesDistributionModels.explain-Tuple{SDMensemble}"><code>explain</code></a>. If an integer <code>N</code>, and optionally <code>threaded</code> and <code>rng</code> is supplied, <code>MonteCarlo</code> sampling is used, where <code>N</code> is the number of iterations (samples). More samples will result in more accurate results, but will take more time to compute.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/explain/shapley.jl#L1-L9",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"SpeciesDistributionModels.explain-Tuple{SDMensemble}",href:"#SpeciesDistributionModels.explain-Tuple{SDMensemble}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.explain")],-1)),s[5]||(s[5]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">explain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ensemble</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SDMensemble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; method, [data], [predictors])</span></span></code></pre></div><p>Generate response curves for <code>ensemble</code>.</p><p><strong>Keywords</strong></p><ul><li><p><code>method</code> is the algorithm to use. See ShapleyValues</p></li><li><p><code>data</code> is the data to use to generate response curves, and defaults to the data used to train the ensemble</p></li><li><p><code>predictors</code>: which predictors to generate response curves for. Defaults to all variables in <code>data</code>.</p></li></ul>',4)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/interface.jl#L117-L127",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[8]||(s[8]=i("a",{id:"SpeciesDistributionModels.predict-Tuple{SpeciesDistributionModels.SDMmachine, Any}",href:"#SpeciesDistributionModels.predict-Tuple{SpeciesDistributionModels.SDMmachine, Any}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.predict")],-1)),s[9]||(s[9]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">predict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SDMobject, newdata; clamp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, threaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [reducer], [by_group])</span></span></code></pre></div><p>Use an <code>SDMmachine</code>, <code>SDMgroup</code>, or <code>SDMensemble</code> to predict habitat suitability for some data, optionally summarized for the entire ensemble, or for each <code>SDMgroup</code>.</p><p><code>newdata</code> can be either a <code>RasterStack</code>, or a Tables.jl.compatible object. It must have all predictor variables used to train the models in its columns (or layers in case of a RasterStack).</p><p><strong>Keywords</strong></p><ul><li><p><code>clamp</code>: if <code>true</code>, the predictions are clamped to the interval seen during training of <code>SDMobject</code>. Defaults to <code>false</code></p></li><li><p><code>threaded</code>: if <code>true</code>, run multithreaded. Defaults to <code>true</code>.</p></li><li><p><code>reducer</code>: Optionally provide a <code>Function</code> to summarize the output. The function should take an vector of values and return a single value. Typical examples are <code>Statistics.mean</code> or <code>Statistics.median</code>.</p></li><li><p><code>by_group</code> is set to <code>true</code>, the data is reduced for each <code>SDMgroup</code>, if it is set to <code>false</code> (the default), it reduced across the entire ensemble.</p></li></ul><p><strong>Returns</strong></p><p>If <code>newdata</code> is a <code>RasterStack</code>, the <code>predict</code> returns a <code>Raster</code>; otherwise, it returns a <code>NamedTuple</code> of <code>Vectors</code>, with habitat suitability represented by a floating-point number between 0 and 1.</p>',7)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/interface.jl#L132-L148",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[12]||(s[12]=i("a",{id:"SpeciesDistributionModels.remove_collinear-Tuple{Any}",href:"#SpeciesDistributionModels.remove_collinear-Tuple{Any}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.remove_collinear")],-1)),s[13]||(s[13]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remove_collinear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data; method, silent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Removes strongly correlated variables in <code>data</code>, until correlation is below a threshold specified in <code>method</code>.</p><p><code>method</code> can currently be either <code>Gvif</code>, <code>Vif</code> or <code>Pearson</code>, which use GVIF, VIF, or Pearson&#39;s r, respectively. GVIF and VIF are similar method, but GVIF includes categorical variables whereas VIF ignores them.</p><p>To run without showing information about collinearity scores, set <code>silent = true</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpeciesDistributionModels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mydata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remove_collinear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mydata; method </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ Info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a has highest GVIF of </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28.367942095054225</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ Info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Removing a, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> variables remaining</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ Info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b has highest GVIF of </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0077618445543057</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ Info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> All variables are below threshold, returning remaining variables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,6)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/collinearity.jl#L21-L43",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[16]||(s[16]=i("a",{id:"SpeciesDistributionModels.sdm-Tuple{Any, Any}",href:"#SpeciesDistributionModels.sdm-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.sdm")],-1)),s[17]||(s[17]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sdm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, models; [resampler], [predictors], [verbosity])</span></span></code></pre></div><p>Construct an ensemble.</p><p><strong>Arguments</strong></p><p><code>data</code>: an <code>SDMdata</code> object <code>models</code>: a <code>NamedTuple</code> with the models to be used in the ensemble.</p><p><strong>Keywords</strong></p><ul><li><p><code>models</code>: a <code>Vector</code> of the models to be used in the ensemble. All models must be MLJ-supported Classifiers.</p></li><li><p>For a full list of supported models, see <a href="https://alan-turing-institute.github.io/MLJ.jl/stable/model_browser/#Classification" target="_blank" rel="noreferrer">https://alan-turing-institute.github.io/MLJ.jl/stable/model_browser/#Classification</a></p></li><li><p><code>predictors</code>: a <code>Vector</code> of <code>Symbols</code> with the names of the predictor values to be used. By default, all pdf</p></li><li><p><code>verbosity</code>: an <code>Int</code> value that regulates how much information is printed.</p></li><li><p><code>cache</code>: is passed to <code>MLJBase.machine</code>. Specify cache=false to prioritize memory management over speed.</p></li><li><p><code>scitype_check_level</code>: is passed to <code>MLJBase.machine</code>. Specify scitype_check_level=0 to disable scitype checking.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpeciesDistributionModels, Maxnet, MLJGLMInterface</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sdmdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(presences, absences; resampler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nfolds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (maxnet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MaxnetBinaryClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), glm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinearBinaryClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ensemble </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sdm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mydata, models)</span></span></code></pre></div>`,8)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/interface.jl#L43-L67",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[20]||(s[20]=i("a",{id:"SpeciesDistributionModels.sdmdata-Tuple{Any, Any}",href:"#SpeciesDistributionModels.sdmdata-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.sdmdata")],-1)),s[21]||(s[21]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sdmdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(presences, absences; resampler, predictors)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sdmdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BitVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; resampler, predictors)</span></span></code></pre></div><p>Construct an <code>SDMdata</code> object from species <code>presences</code> and <code>absences</code>. Alternatively, from a table with predictor variables <code>X</code> and a <code>BitVector</code> <code>y</code>, where <code>false</code> represents absence and <code>true</code> represents presence.</p><p><strong>Keywords</strong></p><ul><li><p><code>resampler</code>: The resampling strategy to be used. Should be a <code>MLJBase.ResamplingStrategy</code>, or a <code>Vector</code> of <code>Tuple</code>s with the form <code>(train, test)</code>. Defaults to <code>NoResampling()</code>. If <code>resampler</code> is a <code>CV</code>, <code>shuffle</code> is internally set to <code>true</code>.</p></li><li><p><code>predictors</code>: a <code>Tuple</code> of <code>Symbols</code> with the names of the predictor values to be used. By default, all predictor variables in <code>X</code>, or all predictor variables in both <code>presences</code> and <code>absences</code> are used..</p></li></ul><p><strong>Returns</strong></p><p>An <code>SDMdata</code> object containing the data provided. This object can be used to construct an <code>SDMensemble</code>.</p><p><strong>Example</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>using Rasters, SpeciesDistributionModels</span></span>
<span class="line"><span>A = rand(10,10)</span></span>
<span class="line"><span>B = rand(10,10)</span></span>
<span class="line"><span>st = RasterStack((a=A, b=B), (X, Y); missingval=(a=missing,b=missing))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>presence_points = [(1, 1), (2, 2), (3, 3), (4, 4)]</span></span>
<span class="line"><span>absence_points = [(5, 5), (6, 6), (7, 7), (8, 8)]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>p = extract(st, presence_points)</span></span>
<span class="line"><span>a = extract(st, absence_points)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mydata = sdmdata(p, a; resampler = CV(nfolds = 2)) # 2-fold cross validation</span></span>
<span class="line"><span>mydata2 = sdmdata([p; a], [trues(4); falses(4)]; resampler = [([1,2],[5,6]), ([3,4], [7,8])]) # provide resampling rows</span></span></code></pre></div>`,8)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/interface.jl#L1-L33",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",b,[i("summary",null,[s[24]||(s[24]=i("a",{id:"SpeciesDistributionModels.thin-Tuple{Any, Any}",href:"#SpeciesDistributionModels.thin-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.thin")],-1)),s[25]||(s[25]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">thin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([rng], x, cutoff; distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Haversine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), [geometrycolumn])</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Thin spatial data by removing points that are closer than </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`cutoff`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">to the nearest other point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the dataset.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Arguments</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `rng`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: a random number generator. The default is </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Random.GLOBAL_RNG()`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `x`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: an </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`AbstractVector`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> that iterates points, or a table with a </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`:geometry`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column.</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `cutoff`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: the distance threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> units of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`distance`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Keywords</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `distance`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: the distance metric used to calculate distances between points. The default</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Haversine()`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, which uses the Haversine formula to calculate the distance between coordinates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meter units.</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `geometrycolumn`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: the name of the column </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the table that contains the points, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `x`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is a table. Usually defaults to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`:geometry`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Example</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```jldoctest</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">using SpeciesDistributionModels, Distances</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># a vector that iteratores points</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">geometries = [(0,0), (1,0), (0,0.000001)]</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># thin to 1000 meters</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">thin(geometries, 1000)</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># thin to 1 degree</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">thin(Xoshiro(123), geometries, 1; distance = Euclidean())</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># output</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2-element Vector{Tuple{Int64, Real}}:</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(0, 0)</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(1, 0)</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span></span></code></pre></div>',1)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/thin.jl#L1-L31",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[37]||(s[37]=i("h2",{id:"Reference-Internal-functions",tabindex:"-1"},[n("Reference - Internal functions "),i("a",{class:"header-anchor",href:"#Reference-Internal-functions","aria-label":'Permalink to "Reference - Internal functions {#Reference-Internal-functions}"'},"​")],-1)),i("details",m,[i("summary",null,[s[28]||(s[28]=i("a",{id:"SpeciesDistributionModels.evaluate-Tuple{Any}",href:"#SpeciesDistributionModels.evaluate-Tuple{Any}"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.evaluate")],-1)),s[29]||(s[29]=n()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evaluate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; measures, train </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [validation])</span></span></code></pre></div><p>Evaluate <code>x</code>, which could be a SDMmachine, SDMgroup, or SDMensemble, by applying the measures provided to the data used to built an ensemble, and return an evaluation object.</p><p><strong>Keywords</strong></p><ul><li><code>measures</code> is a <code>NamedTuple</code> of measures. The keys are used to identify the measures.</li></ul><p>This defaults to using auc, log_loss, and kappa. For threshold-dependent measures, the highest score as well as the threshold at which the highest scores is reached are reported. A list of measurse is available here: <a href="https://juliaai.github.io/StatisticalMeasures.jl/dev/auto_generated_list_of_measures/#aliases" target="_blank" rel="noreferrer">https://juliaai.github.io/StatisticalMeasures.jl/dev/auto_generated_list_of_measures/#aliases</a>. However, note that not all measures are useful.</p><ul><li><p><code>train</code>: a <code>Bool</code> that indicates whether to evaluate on the training data. Defaults to <code>true</code></p></li><li><p><code>test</code>: a <code>Bool</code> that indicates whether to evaluate on the test data.Defaults to <code>true</code></p></li><li><p><code>validation</code>: optionally, provide a separate validation dataset.</p></li></ul><p>Validation data should be a <code>Tuple</code> with presences as the first field and absences as the second.</p>',7)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/interface.jl#L78-L94",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[32]||(s[32]=i("a",{id:"SpeciesDistributionModels.machine_evaluations",href:"#SpeciesDistributionModels.machine_evaluations"},[i("span",{class:"jlbinding"},"SpeciesDistributionModels.machine_evaluations")],-1)),s[33]||(s[33]=n()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">machine_evaluations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eval)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Get the scores </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> each machine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> an evaluation, which can be either an </span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`SDMgroupEvaluation`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> or an </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`SDMensembleEvaluation`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> type is a nested structure of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`NamedTuple`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">. </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`NamedTuple`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> returned has keys corresponding to the evaluation datasets (a subset of </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:train</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, and </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">which each have keys corresponding to the measures specified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`evaluate`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Example</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```julia</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">evaluation = SDM.evaluate(ensemble; measures = (; accuracy, auc))</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">machine_aucs = SDM.machine_evaluations(evaluation).train.auc</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span></span></code></pre></div>',1)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl/blob/067c5cfce1665168dbc8aa8812406d5cb6f345d0/src/evaluate.jl#L35-L50",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const T=p(r,[["render",f]]);export{M as __pageData,T as default};
